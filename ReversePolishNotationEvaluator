import java.util.Stack;

public class ReversePolishNotationEvaluator {

    public int evalRPN(String[] tokens) {
        Stack<Integer> stack = new Stack<>();

        for (String token : tokens) {
            if (token.equals("+") || token.equals("-") || token.equals("*") || token.equals("/")) {
                int b = stack.pop();
                int a = stack.pop();
                int result = 0;
                
                switch (token) {
                    case "+": result = a + b; break;
                    case "-": result = a - b; break;
                    case "*": result = a * b; break;
                    case "/": result = a / b; break;  
                }
                stack.push(result);
            } else {
                stack.push(Integer.parseInt(token));
            }
        }
        return stack.pop();
    }

    public static void main(String[] args) {
        ReversePolishNotationEvaluator evaluator = new ReversePolishNotationEvaluator();

        String[] tokens1 = {"2", "1", "+", "3", "*"};
        System.out.println("Output: " + evaluator.evalRPN(tokens1));  

        String[] tokens2 = {"4", "13", "5", "/", "+"};
        System.out.println("Output: " + evaluator.evalRPN(tokens2));  

        String[] tokens3 = {"10", "6", "9", "3", "+", "-11", "*", "/", "*", "17", "+", "5", "+"};
        System.out.println("Output: " + evaluator.evalRPN(tokens3));  
    }
}
